@using Lykke.Service.DevCerts.Models
@using Newtonsoft.Json
@model UsersModel
@{
    ViewData["Title"] = "Manage Users";
}

<br />
<br />
<div class="editItems">

</div>

@section Scripts
    {
<script type="text/javascript">
        $(function () {
            $.generateTable = function (json) {
                var list = eval('( ' + json + ')');
                var html =
                    '<table class="table table-stripped table-bordered"><tr><th>Email</th><th>Password</th><th>Date</th><th>Revoked</th><th>Actions</th></tr>';
                for (var i = 0; i < list.length; i++) {
                    var elem = list[i];
                    html += '<tr elemId="' + elem.RowKey + '"> ' +
                        '<td class="col-md-2"><span class="viewMode" class = "name-cert" >' + elem.Email + '</span></td>' +
                        '<td class="col-md-2"><span class="viewMode">' + '<div class="input-group"><input type="' + (elem.CertIsRevoked == false ? 'password' :'text') + '" class="form-control pwd" value="' + (elem.CertIsRevoked == true ? 'No Password' : elem.CertPassword) + '"><span class="input-group-btn"><button class="btn btn-default reveal" type="button"><i class="glyphicon glyphicon-eye-open"></i></button></span></div>'  + '</span></td>' +
                        '<td class="col-md-2"><span class="viewMode">' + (elem.CertIsRevoked ? elem.RevokeDate : elem.CertDate) + '</span></td>' +
                        '<td class="col-md-1"><span class="viewMode">' + elem.CertIsRevoked + '</span></td>' +
                        '<td class="col-md-3" class="viewMode" >' + 
                        (elem.CertIsRevoked == true ? '<a href="javascript:;" class="btn  btn-md btn-default generate">Generate new</a>' : '<a href="javascript:;" class="btn  btn-md btn-default download">Download</a>' + '<span>&nbsp;&nbsp;</span>' + '<a href="javascript:;" class="btn  btn-md btn-default revoke">Revoke</a>' + '<span>&nbsp;&nbsp;</span>' + '<a href="javascript:;" class="btn  btn-md btn-default change-pass">New pass</a>') +
                        '</td>' +
                        '</tr>';

                }
                html += '</table>';
                var parent = $('.editItems');
                parent.empty();
                parent.append($(html));

                $(".reveal").on('click', function () {
                    var $pwd = $(this).parents('div').children('input');
                    if ($pwd.attr('type') === 'password') {
                        $pwd.attr('type', 'text');
                    } else {
                        $pwd.attr('type', 'password');
                    }
                });

                $('.download').click(function () {
                    var elemId = $(this).parents('tr').attr('elemId');

                    var url = '@this.Url.Action("GetCertificates", "Home")' + '/'+ elemId;
                    window.open(url, "_blank");
                });

                $('.revoke').click(function () {
                    var elemId = $(this).parents('tr').attr('elemId');

                    if (confirm('Certificate will be revoked.')) {
                        var url = '@this.Url.Action("RevokeCert", "Home")' + '/' + elemId;

                        $.post(url, elemId, function (data) {
                            window.alert('Certificate revoked.');
                            $.generateTable(data.Json);
                        });
                    }
                });

                $('.change-pass').click(function () {
                    var elemId = $(this).parents('tr').attr('elemId');

                    if (confirm('Password will be changed.')) {
                        var url = '@this.Url.Action("ChangePass", "Home")' + '/' + elemId;

                        $.post(url, elemId, function (data) {
                            window.alert('Password changed.');
                            $.generateTable(data.Json);
                        });
                    }
                });

                $('.generate').click(function () {
                    var elemId = $(this).parents('tr').attr('elemId');

                    if (confirm('New certificate will be generated.')) {
                        var url = '@this.Url.Action("GenerateNew", "Home")' + '/' + elemId;

                        $.post(url, elemId, function (data) {
                            window.alert('New certificate was generated.');
                            $.generateTable(data.Json);
                        });
                    }
                });
            }


            $.generateTable('@Html.Raw(JsonConvert.SerializeObject(Model.Users).Replace("'", "\\'").Replace("\"", "\\\""))');
        });
</script>
}